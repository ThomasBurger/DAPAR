% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normalize.R
\name{normalizeD}
\alias{normalizeD}
\title{Normalisation}
\usage{
normalizeD(qData, conds, method, type = NULL, scaling = FALSE,
  quantile = 0.15, ...)
}
\arguments{
\item{qData}{A dataframe that contains quantitative data.}

\item{conds}{A vector of strings containing the column "Condition" of
the \code{pData()}.}

\item{method}{One of the following : "GlobalQuantileAlignment", "SumByColumns", "QuantileCentering", "MeanCentering",
"LOESS", "vsn".}

\item{type}{For the method "GlobalQuantileAlignment" there is no associated type.
For the six other methods, the parameters are "overall" (shift all the
sample distributions at once) or "within conditions" (shift the sample
distributions within each condition at a time).}

\item{scaling}{A boolean that indicates if the variance of the data have to
be forced to unit (variance reduction) or not.}

\item{quantile}{A float that corresponds to the quantile used to align the
data.}

\item{...}{span parameter for LOESS method}
}
\value{
A matrix normalized
}
\description{
Provides several methods to normalize data from
a matrix.
They are organized in 6 main families : GlobalQuantileAlignment, sumByColumns, QuantileCentering, MeanCentering, LOESS and vsn.
For the first famlily there is no type.
For the five other families, two categories are available :
"Overall" which means that the value for each protein
(ie line in the expression data tab) is computed over all the samples ;
"within conditions" which means that the value for each protein
(ie line in the matrix) is computed condition
by condition.
}
\examples{
require(DAPARdata)
data(Exp1_R25_pept)
qData <- Biobase::exprs(Exp1_R25_pept[1:1000])
conds <- Biobase::pData(Exp1_R25_pept[1:1000])[,"Condition"]
normalizeD(qData, conds, "QuantileCentering", "within conditions", quantile = 0.15)
}
\author{
Samuel Wieczorek, Thomas Burger, Helene Borges
}
