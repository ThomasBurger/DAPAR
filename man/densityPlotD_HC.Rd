% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots_density.R
\name{densityPlotD_HC}
\alias{densityPlotD_HC}
\title{Builds a densityplot from a dataframe}
\usage{
densityPlotD_HC(obj, legend = NULL, palette = NULL)
}
\arguments{
\item{obj}{xxx}

\item{legend}{A vector of the conditions (one condition 
per sample).}

\item{palette}{xxx}
}
\value{
A density plot
}
\description{
#' Densityplot of quantitative proteomics data over samples.
#' 
#' @title Builds a densityplot from a dataframe
#' 
#' @param obj xxx
#' 
#' @param conds xxx
#' 
#' @param legend A vector of the conditions (one condition per sample).
#' 
#' @param palette xxx
#' 
#' @return A density plot
#' 
#' @author Florence Combes, Samuel Wieczorek
#' 
#' @examples 
#' utils::data(Exp1_R25_pept, package='DAPARdata')
#' conds <- Biobase::pData(Exp1_R25_pept)[,"Condition"]
#' densityPlotD(Exp1_R25_pept, conds)
#' 
#' @importFrom Biobase exprs pData
#' 
#' @export
#' 
densityPlotD <- function(obj, 
                         conds, 
                         legend=NULL,
                         palette = NULL){
  
  qData <- Biobase::exprs(obj)
  
  if (is.null(legend) ) { legend <- Biobase::pData(obj)[,"Condition"]}
  
  myColors <- NULL
  if (is.null(palette)){
    myColors <-  rep("#FFFFFF", ncol(qData))
  } else {
    if (length(palette) != length(unique(conds))){
      warning("The color palette has not the same dimension as the number of samples")
      return(NULL)
    } else 
      myColors <- GetColorsForConditions(conds, ExtendPalette(length(unique(conds))))
  }
  
  
  ### Range of axis definition
  axis.limits <- matrix(data = 0, nrow = 4, ncol = ncol(qData))
  for (i in 1:ncol(qData)){
    dens <- density(qData[,i], na.rm = TRUE)
    axis.limits[,i] <- c(min(dens$x), max(dens$x), min(dens$y), max(dens$y))
  }
  lim.x <- range(min(axis.limits[1,]), max(axis.limits[2,]))
  lim.y <- range(min(axis.limits[3,]), max(axis.limits[4,]))
  
  
  
  plot(x =NULL
       , ylab ="Density"
       , xlab = "log(intensity)"
       , col = myColors
       ,xlim = lim.x
       ,ylim = lim.y
       ,las = 1
       ,cex.lab = 1
       ,cex.axis = 1
       ,cex.main = 3)
  
  for (i in ncol(qData)){
    lines(density(qData[,i], na.rm=TRUE), col = myColors[i])
  }
  
  
  legend("topleft"         
         , legend = unique(myColors)
         , col = unique(myColors)
         , pch = 15 
         , bty = "n"
         , pt.cex = 2
         , cex = 1
         , horiz = FALSE
         , inset=c(0,0)
  )
}
}
\details{
Densityplot of quantitative proteomics data over samples. Same as the function \code{\link{densityPlotD}}
but uses the package \code{highcharter}
}
\examples{
utils::data(Exp1_R25_pept, package='DAPARdata')
densityPlotD_HC(Exp1_R25_pept)
conds <- Biobase::pData(Exp1_R25_pept)$Condition
pal <- ExtendPalette(length(unique(conds)), 'Dark2')
densityPlotD_HC(Exp1_R25_pept, palette=pal)

}
\author{
Samuel Wieczorek
}
