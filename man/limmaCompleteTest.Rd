% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/limmaAnalysis.R
\name{limmaCompleteTest}
\alias{limmaCompleteTest}
\title{Computes a hierarchical differential analysis}
\usage{
limmaCompleteTest(qData, Conditions, RepBio, RepTech, Contrast = 1)
}
\arguments{
\item{qData}{A matrix of quantitative data, without any missing values.}

\item{Conditions}{A vector of factor which indicates the name of the 
biological condition for each replicate.}

\item{RepBio}{A vector of factor which indicates the number of the bio rep 
for each replicate.}

\item{RepTech}{A vector of factor which indicates the number of the tech 
rep for each replicate.}

\item{Contrast}{Indicates if the test consists of the comparison of each 
biological condition versus 
each of the other ones (Contrast=1; 
for example H0:"C1=C2" vs H1:"C1!=C2", etc.) 
or each condition versus all others (Contrast=2; e.g.  H0:"C1=(C2+C3)/2" vs
 H1:"C1!=(C2+C3)/2", etc. if there are three conditions).}
}
\value{
A list of two items : FC and P_Value; both are dataframe. The first one contains
the logFC values of all the comparisons (one column for one comparison), the second one contains
the pvalue of all the comparisons (one column for one comparison). The names of the columns for those two dataframes
are identical and correspond to the description of the comparison.
}
\description{
This function is a limmaCompleteTest
}
\examples{
require(DAPARdata)
data(Exp1_R25_pept)
obj <- Exp1_R25_pept[1:1000]
lapala <- findMECBlock(obj)
obj <- wrapper.impute.detQuant(obj)
obj <- reIntroduceMEC(obj, lapala)
obj <- wrapper.impute.detQuant(obj)
condition1 <- '25fmol'
condition2 <- '10fmol'
qData <- Biobase::exprs(obj)
RepBio <- RepTech <- factor(1:6)
conds <- factor(Biobase::pData(obj)[,"Label"])
limma <- limmaCompleteTest(qData,conds,RepBio, RepTech)
}
\author{
Quentin Giai-Gianetto
}
